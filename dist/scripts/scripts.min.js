"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}
/*!
 * @copyright Copyright (c) 2017 IcoMoon.io
 * @license   Licensed under MIT license
 *            See https://github.com/Keyamoon/svgxuse
 * @version   1.2.6
 */function connectFour(e){var t,n=[[0,1,2,3],[41,40,39,38],[7,8,9,10],[34,33,32,31],[14,15,16,17],[27,26,25,24],[21,22,23,24],[20,19,18,17],[28,29,30,31],[13,12,11,10],[35,36,37,38],[6,5,4,3],[0,7,14,21],[41,34,27,20],[1,8,15,22],[40,33,26,19],[2,9,16,23],[39,32,25,18],[3,10,17,24],[38,31,24,17],[4,11,18,25],[37,30,23,16],[5,12,19,26],[36,29,22,15],[6,13,20,27],[35,28,21,14],[0,8,16,24],[41,33,25,17],[7,15,23,31],[34,26,18,10],[14,22,30,38],[27,19,11,3],[35,29,23,17],[6,12,18,24],[28,22,16,10],[13,19,25,31],[21,15,9,3],[20,26,32,38],[36,30,24,18],[5,11,17,23],[37,31,25,19],[4,10,16,22],[2,10,18,26],[39,31,23,15],[1,9,17,25],[40,32,24,16],[9,17,25,33],[8,16,24,32],[11,17,23,29],[12,18,24,30],[1,2,3,4],[5,4,3,2],[8,9,10,11],[12,11,10,9],[15,16,17,18],[19,18,17,16],[22,23,24,25],[26,25,24,23],[29,30,31,32],[33,32,31,30],[36,37,38,39],[40,39,38,37],[7,14,21,28],[8,15,22,29],[9,16,23,30],[10,17,24,31],[11,18,25,32],[12,19,26,33],[13,20,27,34]],r=document.querySelector(".connect-four__root"),o=document.querySelector("#connect-four__alert"),a=document.querySelector("#connect-four__player"),i=document.querySelector("#connect-four__button"),s=1,c=!1;function l(){for(var e=0;e<n.length;e++){var r=t[n[e][0]],a=t[n[e][1]],i=t[n[e][2]],s=t[n[e][3]];if(r.classList.contains("player-one")&&a.classList.contains("player-one")&&i.classList.contains("player-one")&&s.classList.contains("player-one")&&(c=!0,o.textContent="Player One Wins!"),r.classList.contains("player-two")&&a.classList.contains("player-two")&&i.classList.contains("player-two")&&s.classList.contains("player-two")&&(c=!0,o.textContent="Player Two Wins!"),c)for(var l=0;l<t.length-7;l++)t[l].removeEventListener("click",u)}}function u(e){for(var n=0;n<t.length-7;n++)t[n]===e.target&&t[n+7].classList.contains("taken")&&!t[n].classList.contains("taken")?(t[n].classList.add("taken"),t[n].removeEventListener("click",u),1===s?(t[n].classList.add("player-one"),s=2):2===s&&(t[n].classList.add("player-two"),s=1),a.textContent=s):o.textContent="Cant go here",l()}function m(){s=1,a.textContent=s,c=!1,o.textContent="Let's get started!",r.textContent=""}i.addEventListener("click",(function(){e=!1,i.textContent="New game",m(),function(){for(var e=0;e<49;e++){var n=document.createElement("div");e>=42?n.classList.add("taken"):n.addEventListener("click",u),n.setAttribute("data-connectfour",e),r.appendChild(n)}t=r.querySelectorAll("div")}()})),e&&(m(),i.textContent="Start")}function memoryGame(e){var t,n=[{name:"leaf",img:"./assets/icons/sprite.svg#leaf"},{name:"brightness-up",img:"./assets/icons/sprite.svg#brightness-up"},{name:"star",img:"./assets/icons/sprite.svg#star"},{name:"flame",img:"./assets/icons/sprite.svg#flame"},{name:"mountain",img:"./assets/icons/sprite.svg#mountain"},{name:"music",img:"./assets/icons/sprite.svg#music"}],r=document.querySelector(".memory-game__root"),o=document.querySelector("#memory-game__alert"),a=document.querySelector("#memory-game__result"),i=document.querySelector("#memory-game__button"),s="./assets/icons/sprite.svg#search",c="./assets/icons/sprite.svg#check",l=[],u=[],m=[];function d(){var e=l[0],r=l[1],i=u[0],s=u[1];i===s?(o.textContent="You have clicked the same image",f()):e===r?(o.textContent="You found a match",t[i].querySelector("img").setAttribute("src",c),t[s].querySelector("img").setAttribute("src",c),t[i].removeEventListener("click",y),t[s].removeEventListener("click",y),m.push(u)):(o.textContent="Try again",f()),l=[],u=[],a.textContent=m.length,m.length===n.length/2&&(o.textContent="Congratulations! You found them all")}function y(e){var t=e.target.closest("div").querySelector("img"),r=e.target.closest("div").getAttribute("data-memorygameid");l.push(n[r].name),u.push(r),t.setAttribute("src",n[r].img),2===l.length&&setTimeout(d,500),l.length>2&&f()}function f(){t.forEach((function(e){m.flat(1/0).includes(e.dataset.memorygameid)||e.querySelector("img").setAttribute("src",s)}))}function v(){l=[],u=[],m=[],o.textContent="Let's get started!",a.textContent=m.length,r.textContent=""}n=[].concat(_toConsumableArray(n),_toConsumableArray(n)),i.addEventListener("click",(function(){e=!1,i.textContent="New game",v(),function(){n.sort((function(){return.5-Math.random()}));for(var e=0;e<n.length;e++){var o=document.createElement("div"),a=document.createElement("img");a.setAttribute("src",s),a.setAttribute("alt","card"),o.setAttribute("data-memorygameid",e),o.addEventListener("click",y),o.appendChild(a),r.appendChild(o)}t=r.querySelectorAll("div")}()})),e&&(v(),i.textContent="Start")}function whackAMole(e){var t,n,r,o,a=document.querySelector(".whack-a-mole__root"),i=document.querySelector("#whack-a-mole__time"),s=document.querySelector("#whack-a-mole__result"),c=document.querySelector("#whack-a-mole__button"),l="./assets/icons/sprite.svg#smiley",u=60,m=0;function d(){for(var e=0;e<6;e++){var n=document.createElement("div"),i=document.createElement("img");i.setAttribute("src",l),i.setAttribute("alt","mole"),n.setAttribute("data-whackamole",e),n.addEventListener("mouseup",f),n.appendChild(i),a.appendChild(n)}t=a.querySelectorAll("div"),r=setInterval(y,700),o=setInterval(v,1e3)}function y(){var e=t[Math.floor(6*Math.random())];t.forEach((function(e){e.querySelector("img").setAttribute("src",l),e.classList.remove("mole")})),e.classList.add("mole"),n=e.dataset.whackamole}function f(){this.dataset.whackamole===n&&(this.querySelector("img").setAttribute("src","./assets/icons/sprite.svg#smiley-f"),m++,s.textContent=m,n=null)}function v(){u--,i.textContent=u,0===parseInt(u)&&(clearInterval(r),clearInterval(o),s.textContent="Game over! Your final score is "+m)}function h(){m=0,s.textContent=m,n=null,clearInterval(r),clearInterval(o),u=60,i.textContent=u,a.textContent=""}c.addEventListener("click",(function(){e=!1,c.textContent="New game",h(),d()})),e&&(h(),c.textContent="Start")}!function(){if("undefined"!=typeof window&&window.addEventListener){var e,t,n,r=Object.create(null),o=function(){clearTimeout(t),t=setTimeout(e,100)},a=function(){},i=function(e){function t(e){var t;return void 0!==e.protocol?t=e:(t=document.createElement("a")).href=e,t.protocol.replace(/:/g,"")+t.host}var n,r,o;return window.XMLHttpRequest&&(n=new XMLHttpRequest,r=t(location),o=t(e),n=void 0===n.withCredentials&&""!==o&&o!==r?XDomainRequest||void 0:XMLHttpRequest),n},s="http://www.w3.org/1999/xlink";e=function(){var e,t,n,c,l,u,m,d,y,f,v=0;function h(){var e;0===(v-=1)&&(a(),window.addEventListener("resize",o,!1),window.addEventListener("orientationchange",o,!1),window.MutationObserver?((e=new MutationObserver(o)).observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0}),a=function(){try{e.disconnect(),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)}catch(e){}}):(document.documentElement.addEventListener("DOMSubtreeModified",o,!1),a=function(){document.documentElement.removeEventListener("DOMSubtreeModified",o,!1),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)}))}function g(e){return function(){!0!==r[e.base]&&(e.useEl.setAttributeNS(s,"xlink:href","#"+e.hash),e.useEl.hasAttribute("href")&&e.useEl.setAttribute("href","#"+e.hash))}}function p(e){return function(){var t,n=document.body,r=document.createElement("x");e.onload=null,r.innerHTML=e.responseText,(t=r.getElementsByTagName("svg")[0])&&(t.setAttribute("aria-hidden","true"),t.style.position="absolute",t.style.width=0,t.style.height=0,t.style.overflow="hidden",n.insertBefore(t,n.firstChild)),h()}}function b(e){return function(){e.onerror=null,e.ontimeout=null,h()}}for(a(),y=document.getElementsByTagName("use"),l=0;l<y.length;l+=1){try{t=y[l].getBoundingClientRect()}catch(e){t=!1}e=(d=(c=y[l].getAttribute("href")||y[l].getAttributeNS(s,"href")||y[l].getAttribute("xlink:href"))&&c.split?c.split("#"):["",""])[0],n=d[1],u=t&&0===t.left&&0===t.right&&0===t.top&&0===t.bottom,t&&0===t.width&&0===t.height&&!u?(y[l].hasAttribute("href")&&y[l].setAttributeNS(s,"xlink:href",c),e.length&&(!0!==(f=r[e])&&setTimeout(g({useEl:y[l],base:e,hash:n}),0),void 0===f&&void 0!==(m=i(e))&&(f=new m,r[e]=f,f.onload=p(f),f.onerror=b(f),f.ontimeout=b(f),f.open("GET",e),f.send(),v+=1))):u?e.length&&r[e]&&setTimeout(g({useEl:y[l],base:e,hash:n}),0):void 0===r[e]?r[e]=!0:r[e].onload&&(r[e].abort(),delete r[e].onload,r[e]=!0)}y="",v+=1,h()},n=function(){window.removeEventListener("load",n,!1),t=setTimeout(e,0)},"complete"!==document.readyState?window.addEventListener("load",n,!1):n()}}(),document.addEventListener("DOMContentLoaded",(function(){function e(e){var n=e.nextElementSibling;n.style.maxHeight?(n.style.maxHeight=null,e===t&&(t.querySelector("svg").style.transform="rotate(180deg)")):(n.style.maxHeight=n.scrollHeight+"px",e===t&&(t.querySelector("svg").style.transform="rotate(0deg)"))}var t=document.querySelector(".hero__title"),n=document.querySelector(".hero").querySelector("ul"),r=n.querySelectorAll("li"),o=document.querySelectorAll(".content__item");e(t),t.addEventListener("click",(function(){e(t)})),n.addEventListener("click",(function(n){var a=n.target,i=a.dataset.type;e(t),r.forEach((function(e){e.style.textDecoration="none",e.querySelector("svg").style.opacity="0"})),memoryGame(true),whackAMole(true);for(var s=0;s<o.length;s++)o[s].style.display="none",o[s].classList.contains(i)&&(o[s].style.display="flex",a.style.textDecoration="underline",a.querySelector("svg").style.opacity="1","memory-game"===i?memoryGame():"whack-a-mole"===i?whackAMole():"connect-four"===i&&connectFour())}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
